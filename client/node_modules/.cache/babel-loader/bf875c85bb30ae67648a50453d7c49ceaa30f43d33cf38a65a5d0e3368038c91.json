{"ast":null,"code":"var _jsxFileName = \"D:\\\\StudWork\\\\NodeR\\\\client\\\\src\\\\pages\\\\NotesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport notesService from \"../services/notesService\";\nimport NoteCard from \"../components/Notes/NoteCard\";\nimport NoteForm from \"../components/Notes/NoteForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesPage = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [editingNote, setEditingNote] = useState(null);\n\n  // Функція для завантаження нотатків\n  const fetchNotes = async () => {\n    try {\n      const fetchedNotes = await notesService.getNotes();\n      setNotes(fetchedNotes);\n    } catch (error) {\n      console.error(\"Failed to fetch notes:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  // Додавання нової нотатки\n  const handleCreate = async note => {\n    try {\n      await notesService.createNote(note);\n      fetchNotes(); // Оновлюємо список після додавання\n    } catch (error) {\n      console.error(\"Failed to create note:\", error);\n    }\n  };\n\n  // Редагування існуючої нотатки\n  const handleEdit = async note => {\n    try {\n      await notesService.updateNote(note.id, note);\n      fetchNotes(); // Оновлюємо список після редагування\n      setEditingNote(null); // Закриваємо форму редагування\n    } catch (error) {\n      console.error(\"Failed to update note:\", error);\n    }\n  };\n\n  // Видалення нотатки\n  const handleDelete = async id => {\n    try {\n      await notesService.deleteNote(id);\n      fetchNotes(); // Оновлюємо список після видалення\n    } catch (error) {\n      console.error(\"Failed to delete note:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n      onSubmit: handleCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-4\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(NoteCard, {\n          note: note,\n          onEdit: () => setEditingNote(note),\n          onDelete: () => handleDelete(note.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), editingNote && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(NoteForm, {\n          initialData: editingNote,\n          onSubmit: handleEdit,\n          onCancel: () => setEditingNote(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(NotesPage, \"5bsD+ByTf6hc2WOIoKCe/ZSUwLQ=\");\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useEffect","useState","notesService","NoteCard","NoteForm","jsxDEV","_jsxDEV","NotesPage","_s","notes","setNotes","editingNote","setEditingNote","fetchNotes","fetchedNotes","getNotes","error","console","handleCreate","note","createNote","handleEdit","updateNote","id","handleDelete","deleteNote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","onEdit","onDelete","initialData","onCancel","_c","$RefreshReg$"],"sources":["D:/StudWork/NodeR/client/src/pages/NotesPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport notesService from \"../services/notesService\";\r\nimport NoteCard from \"../components/Notes/NoteCard\";\r\nimport NoteForm from \"../components/Notes/NoteForm\";\r\n\r\nconst NotesPage = () => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [editingNote, setEditingNote] = useState(null);\r\n\r\n    // Функція для завантаження нотатків\r\n    const fetchNotes = async () => {\r\n        try {\r\n            const fetchedNotes = await notesService.getNotes();\r\n            setNotes(fetchedNotes);\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch notes:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchNotes();\r\n    }, []);\r\n\r\n    // Додавання нової нотатки\r\n    const handleCreate = async (note) => {\r\n        try {\r\n            await notesService.createNote(note);\r\n            fetchNotes(); // Оновлюємо список після додавання\r\n        } catch (error) {\r\n            console.error(\"Failed to create note:\", error);\r\n        }\r\n    };\r\n\r\n    // Редагування існуючої нотатки\r\n    const handleEdit = async (note) => {\r\n        try {\r\n            await notesService.updateNote(note.id, note);\r\n            fetchNotes(); // Оновлюємо список після редагування\r\n            setEditingNote(null); // Закриваємо форму редагування\r\n        } catch (error) {\r\n            console.error(\"Failed to update note:\", error);\r\n        }\r\n    };\r\n\r\n    // Видалення нотатки\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            await notesService.deleteNote(id);\r\n            fetchNotes(); // Оновлюємо список після видалення\r\n        } catch (error) {\r\n            console.error(\"Failed to delete note:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container my-4\">\r\n            <h1 className=\"text-center\">My Notes</h1>\r\n            <NoteForm onSubmit={handleCreate} />\r\n\r\n            <div className=\"row mt-4\">\r\n                {notes.map((note) => (\r\n                    <div key={note.id} className=\"col-md-4 mb-4\">\r\n                        <NoteCard\r\n                            note={note}\r\n                            onEdit={() => setEditingNote(note)}\r\n                            onDelete={() => handleDelete(note.id)}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {editingNote && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <NoteForm\r\n                            initialData={editingNote}\r\n                            onSubmit={handleEdit}\r\n                            onCancel={() => setEditingNote(null)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}