{"ast":null,"code":"var _jsxFileName = \"D:\\\\StudWork\\\\NodeR\\\\client\\\\src\\\\components\\\\Notes\\\\NoteEditForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport notesService from \"../../services/notesService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteEditForm = ({\n  note,\n  onUpdate,\n  onCancel\n}) => {\n  _s();\n  const [title, setTitle] = useState(note.title);\n  const [content, setContent] = useState(note.content);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const updatedNote = await notesService.updateNote(note.id, {\n        title,\n        content\n      });\n      onUpdate(updatedNote);\n    } catch (err) {\n      console.error(\"Failed to update note\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteEditForm, \"jn3msuJzljHkk+suqR3doIx1iWQ=\");\n_c = NoteEditForm;\nexport default NoteEditForm;\nvar _c;\n$RefreshReg$(_c, \"NoteEditForm\");","map":{"version":3,"names":["React","useState","notesService","jsxDEV","_jsxDEV","NoteEditForm","note","onUpdate","onCancel","_s","title","setTitle","content","setContent","handleSubmit","e","preventDefault","updatedNote","updateNote","id","err","console","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["D:/StudWork/NodeR/client/src/components/Notes/NoteEditForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport notesService from \"../../services/notesService\";\r\n\r\nconst NoteEditForm = ({ note, onUpdate, onCancel }) => {\r\n    const [title, setTitle] = useState(note.title);\r\n    const [content, setContent] = useState(note.content);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const updatedNote = await notesService.updateNote(note.id, { title, content });\r\n            onUpdate(updatedNote);\r\n        } catch (err) {\r\n            console.error(\"Failed to update note\", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Edit Note</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <textarea\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Save</button>\r\n            <button type=\"button\" onClick={onCancel}>\r\n                Cancel\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NoteEditForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACK,IAAI,CAACI,KAAK,CAAC;EAC9C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACK,IAAI,CAACM,OAAO,CAAC;EAEpD,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,WAAW,GAAG,MAAMf,YAAY,CAACgB,UAAU,CAACZ,IAAI,CAACa,EAAE,EAAE;QAAET,KAAK;QAAEE;MAAQ,CAAC,CAAC;MAC9EL,QAAQ,CAACU,WAAW,CAAC;IACzB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAMmB,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBACzBpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEpB,KAAM;MACbqB,QAAQ,EAAGhB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFxB,OAAA;MACI0B,KAAK,EAAElB,OAAQ;MACfmB,QAAQ,EAAGhB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACiB,MAAM,CAACF,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFxB,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnCxB,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAACI,OAAO,EAAEzB,QAAS;MAAAgB,QAAA,EAAC;IAEzC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAACnB,EAAA,CAhCIJ,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}